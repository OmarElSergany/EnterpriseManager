<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAAA49JREFUWEfFV1lPU0EYvf/GBQRRVEBFTVQk0QgPKiCLouIKKosxRkWikWDUuCAP
        okhwSUQNIBokPqgxMS5PPsiL6W1LLbUW2kqJC1U+50zvpdfbKb0Xb+JJTtqm882cmW+ZbyQyAadnnG4/
        CdKRli9UesJN+YdclF/nouJ6N9Vd8tL1hwEasP9QRhuDIQHXegKUUW6n5EIbLdhip6xtdlpa4aBlOyPE
        96ztDlrI/kspkmlusUzn74wo1lNjSgG9L0N8wvmlMmWzhVbsdhoiREHorI02amOnMhXiCig/OUTJBTY+
        mWgRI1y+y8FPY+3BQWXWWAgFrNrn5McpmnQ6zGQuw3zhXxPKClHECMipGuT+Fk2kJeIA7pmDuCiz892K
        xqlcsiPiFj3+ElDR6OGDRBNoiTF7mjw0HAzT17Hf1NYb4EISiYDoNWyDWkwK6HsVoiTmc5GhltgJUk+P
        5k6/IbelsZhoue9XrDQCUjfLhgIOu29/FFSsonB5xymVuURkoyVOacYGG01MROKBC+h4HOSpJjLQM2Or
        nZo6hrmxFu8/fue7E9nouYjNcarNx+24AOR4NismosF6Ygc4rSFfmE+gInf/IC9IIhs9MUfSJhu3k3yB
        MM1mP0QD4xGuQgbUsvLb0OqjxawKgqKx8Yj68G7gG0ldz0cpnaWRaFA8QgAWRPqlM9chuo2eoEq44fJd
        P0mN7cOUaSDvVWLx1ZVOKj7upoKjnziLjrlpfa3LlAhkE1JZ2nvGw3+IBomI3dZc9HL/afH07ZjhQAYR
        d3lMtIRr1WjwgBBQde6zsmwU3S9GTQnASebVMAEl/1vAdFxghQC4ABVVOn3DXBBaJYAHIdu81PXMXBpa
        JYCnYecISV5/mFcl0SARrRIwWYhgjIAwmsNWCEApRvUFuAB0uvNKjBlbIQDHX39VcxkBuMlwEiIDLf9V
        gHodj4c11zHQ/zrEm1CRkZYQUH0hthL2vwkZEpDGTvrKPUFDAqATTtTVIH/XVbv44wS3IXi42UtlDe6E
        9QTicyrjtGQq0BEnqgsQgU5Xy0SL4//0MllZJYoYAcBKi9ty7ByLq37XQigAwCWFTtdIYMYjAg7BnXvA
        5MNERQ+L7JRCmVdKM0IwFic4k0V7a/c0n2ZatDzw826YP0LYJ45U/zhFh4RF0RmjZzx7y4LHqR6y+yfd
        7Is8z3GN4zZDU4GOCM9zvKI/yGae50R/AC1R1BtRL6JPAAAAAElFTkSuQmCC
</value>
  </data>
</root>