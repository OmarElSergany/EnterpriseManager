/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 *  Enterprise Manager is distributed under the GNU General Public License version 3 and  
 *  is also available under alternative licenses negotiated directly with Simon Carter.  
 *  If you obtained Enterprise Manager under the GPL, then the GPL applies to all loadable 
 *  Enterprise Manager modules used on your system as well. The GPL (version 3) is 
 *  available at https://opensource.org/licenses/GPL-3.0
 *
 *  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 *  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *  See the GNU General Public License for more details.
 *
 *  The Original Code was created by Simon Carter (s1cart3r@gmail.com)
 *
 *  Copyright (c) 2010 - 2017 Simon Carter.  All Rights Reserved.
 *
 *  Product:  Enterprise Manager
 *  
 *  File: Supplier.cs
 *
 *  Purpose:  
 *
 *  Date        Name                Reason
 *  
 *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
using System;

using Library.BOL.ContactDetails;
using Library.BOL.Countries;

namespace Library.BOL.Suppliers
{
	/// <summary>
	/// Wrapper for Firebird table SUPPLIERS
	/// 
	/// Automatically generated by FBSPGen (http://www.sieradelta.com/Products/FBSPGen.aspx)
	/// </summary>
	public class Supplier
	{
        #region Private Members

        private Contacts _contacts;

        private SupplierProducts _products;

        #endregion Private Members

        #region Constructors

        /// <summary>
        /// Standard constructor for Supplier
        /// </summary>
        /// <param name="id">Property Description for Field ID</param>
        /// <param name="businessName">Property Description for Field BUSINESS_NAME</param>
        /// <param name="addresslineOne">Property Description for Field ADDRESSLINE1</param>
        /// <param name="addresslineTwo">Property Description for Field ADDRESSLINE2</param>
        /// <param name="addresslineThree">Property Description for Field ADDRESSLINE3</param>
        /// <param name="city">Property Description for Field CITY</param>
        /// <param name="county">Property Description for Field COUNTY</param>
        /// <param name="postcode">Property Description for Field POSTCODE</param>
        /// <param name="country">Property Description for Field COUNTRY_ID</param>
        /// <param name="status">Property Description for Field STATUS</param>
        /// <param name="reliability">Property Description for Field RELIABILITY</param>
        /// <param name="averageTurnaround">Property Description for Field AVERAGE_TURNAROUND</param>
        public Supplier (Int64 id, string businessName, 
			string addresslineOne, string addresslineTwo, string addresslineThree, 
			string city, string county, string postcode, 
			Country country, string website, SupplierStatus status, int reliability, 
			double averageTurnaround)
		{
			ID = id;
			BusinessName = businessName;
			Addressline1 = addresslineOne;
			Addressline2 = addresslineTwo;
			Addressline3 = addresslineThree;
			City = city;
			County = county;
			Postcode = postcode;
			Country = country;
            Website = website;
			Status = status;
			Reliability = reliability;
			AverageTurnaround = averageTurnaround;
		}

		#endregion Constructors

		#region Public Methods

		/// <summary>
		/// Saves the current record
		/// </summary>
		public void Save()
		{
			Library.DAL.FirebirdDB.SupplierUpdate(this);
		}

		/// <summary>
		/// Deletes the current record
		/// </summary>
		public bool Delete()
		{
			return (false);
		}

        public bool UpdateContact(string name, string telephone)
        {
            Contacts contacts = Contacts;
            
            if (contacts.Count == 0)
            {
                contacts.Add(Contacts.Create(name, ContactDetailsType.OfficeTelephone, telephone));
            }

            Contact contact = contacts[0];
            contact.ContactName = name;
            contact.ContactValue = telephone;
            contact.Save();

            DAL.FirebirdDB.SupplierAddContactDetails(this, contact);

            return (true);
        }

		/// <summary>
		/// Reloads the current record
		/// </summary>
		public void Reload()
		{
			throw new NotImplementedException();
		}

        #endregion Public Methods

        #region Internal Methods

        internal void ClearContacts()
        {
            _contacts = null;
        }

        #endregion Internal Methods

        #region Overridden Methods

        /// <summary>
        /// Returns the String for the class
        /// </summary>
        public override string ToString()
		{
			return (String.Format("SUPPLIERS Record {0}", ID));
		}

		#endregion Overridden Methods

		#region Properties

		/// <summary>
		/// Property Description for Field ID
		/// </summary>
		public Int64 ID { get; internal set; }

		/// <summary>
		/// Property Description for Field BUSINESS_NAME
		/// </summary>
		public string BusinessName { get; set; }

		/// <summary>
		/// Property Description for Field ADDRESSLINE1
		/// </summary>
		public string Addressline1 { get; set; }

		/// <summary>
		/// Property Description for Field ADDRESSLINE2
		/// </summary>
		public string Addressline2 { get; set; }

		/// <summary>
		/// Property Description for Field ADDRESSLINE3
		/// </summary>
		public string Addressline3 { get; set; }

		/// <summary>
		/// Property Description for Field CITY
		/// </summary>
		public string City { get; set; }

		/// <summary>
		/// Property Description for Field COUNTY
		/// </summary>
		public string County { get; set; }

		/// <summary>
		/// Property Description for Field POSTCODE
		/// </summary>
		public string Postcode { get; set; }

		/// <summary>
		/// Property Description for Field COUNTRY_ID
		/// </summary>
		public Country Country { get; set; }

        /// <summary>
        /// Website for supplier
        /// </summary>
        public string Website { get; set; }

		/// <summary>
		/// Property Description for Field STATUS
		/// </summary>
		public SupplierStatus Status { get; set; }

		/// <summary>
		/// Property Description for Field RELIABILITY
		/// </summary>
		public int Reliability { get; set; }

		/// <summary>
		/// Property Description for Field AVERAGE_TURNAROUND
		/// </summary>
		public double AverageTurnaround { get; set; }

        /// <summary>
        /// List of contacts
        /// </summary>
        public Contacts Contacts
        {
            get
            {
                if (_contacts == null)
                    _contacts = DAL.FirebirdDB.ContactDetailsGet(this);

                return (_contacts);
            }
        }


        public SupplierProducts Products
        {
            get
            {
                if (_products == null)
                    _products = DAL.FirebirdDB.SupplierProductSelectAll(this);

                return (_products);
            }
        }

		#endregion Properties
	}
}