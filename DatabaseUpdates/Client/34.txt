CREATE TABLE SEO_REPORT_CAMPAIGN
(
  CAMPAIGN_ID BIGINT NOT NULL,
  CAMPAIGN_CITY BIGINT NOT NULL,
  CAMPAIGN_NAME VARCHAR(40) NOT NULL,
  CAMPAIGN_VISITORS INT,
  CAMPAIGN_CURRENCY VARCHAR(3),
  CAMPAIGN_SALES NUMERIC(18, 4),
  
  CONSTRAINT PK_SEO_REPORT_CAMPAIGN_ID PRIMARY KEY (CAMPAIGN_ID),
  
  CONSTRAINT UNQ_SEO_REPORT_CAMPAIGN_1 UNIQUE (CAMPAIGN_NAME, CAMPAIGN_CITY, CAMPAIGN_CURRENCY)
);

GRANT ALL ON TABLE SEO_REPORT_CAMPAIGN TO PUBLIC;


SET TERM ^ ;

CREATE OR ALTER PROCEDURE SEO_UPDATE_CAMPAIGN_DATA
RETURNS 
(
    opCITY BIGINT,
    opCode VARCHAR(500), 
    opCount BIGINT, 
    opSum NUMERIC(18, 4), 
    opCurrency VARCHAR(3)
)
AS
  DECLARE VARIABLE vExtraPos INTEGER;
  DECLARE VARIABLE vLen INTEGER;
BEGIN
  FOR
    SELECT seo.CITY_ID, COUNT(a.SEO_DATA_ID), sum(seo.SALE_AMOUNT), seo.SALE_CURRENCY, 
        SUBSTRING(a.URL FROM POSITION('cmp=' IN LOWER(a.URL)) + 4)
    FROM SEO_DATA_PAGE_VIEWS a
      JOIN SEO_DATA seo ON (seo.ID = a.SEO_DATA_ID)
      JOIN SEO_UPDATE_STATUS us ON (us.SEO_DATA_ID = a.SEO_DATA_ID)
    WHERE a.VISITED >= CURRENT_TIMESTAMP -60
      AND LOWER(a.URL) like '%cmp=%'
      AND us.PROCESS_STATUS = 10
    GROUP BY seo.CITY_ID, seo.SALE_CURRENCY, seo.SALE_CURRENCY, 
        SUBSTRING(a.URL FROM POSITION('cmp=' IN LOWER(a.URL)) + 4)
    INTO :opCity, :opCount, :opSum, :opCurrency, :opCode
  DO
  BEGIN
    vExtraPos = POSITION('&' IN opCode);
    
    IF (vExtraPos > 0) THEN
    BEGIN
        opCode = SUBSTRING(opCode FROM 1 FOR vExtraPos -1);
    END
    
    vLen = STRLEN(opCode);
    
    IF ((NOT opCode = '{campaign}') AND (NOT opCode CONTAINING '''') 
        AND (vLen <= 40) AND (NOT opCode CONTAINING '%')
        AND (vLen > 0)) THEN
    BEGIN
        SUSPEND;
    END
  END
END ^
    
    
SET TERM ; ^

GRANT EXECUTE ON PROCEDURE SEO_UPDATE_CAMPAIGN_DATA TO PUBLIC;


SET TERM ^ ;

CREATE OR ALTER TRIGGER TR_SEO_REPORT_CAMPAIGN_ID FOR SEO_REPORT_CAMPAIGN
ACTIVE BEFORE INSERT POSITION 0
AS 
BEGIN 
  IF (NEW.CAMPAIGN_ID IS NULL) THEN
    NEW.CAMPAIGN_ID = GEN_ID(GEN_SEO_DATA_ID, 1);
END^

SET TERM ; ^ 

SET TERM ^ ;
CREATE OR ALTER PROCEDURE SEO_UPDATE_TOTALS_STAGE_10
AS
  DECLARE VARIABLE vCount INTEGER;
  DECLARE VARIABLE vCode VARCHAR (40);
  DECLARE VARIABLE vCity BIGINT;
  DECLARE VARIABLE vVisits BIGINT;
  DECLARE VARIABLE vCurrency VARCHAR(3);
  DECLARE VARIABLE vSales NUMERIC(18, 4);
BEGIN
  EXECUTE PROCEDURE WSP_PROCEDURE_RUNNING('SEO_UPDATE_TOTALS_STAGE_10') RETURNING_VALUES :vCount;
    
  IF (vCount > 0) THEN
    EXIT;
  
  -- START CAMPAIGN DATA
  FOR
    SELECT SUM(opCOUNT), SUM(opSUM), opCode, opCurrency, opCity
    FROM SEO_UPDATE_CAMPAIGN_DATA
    GROUP BY opCODE, opCurrency, opCity    
    INTO :vVisits, :vSales, :vCode, :vCurrency, :vCity
  DO
  BEGIN
    
    IF (NOT EXISTS (SELECT a.CAMPAIGN_ID FROM SEO_REPORT_CAMPAIGN a WHERE a.CAMPAIGN_CITY = :vCity AND a.CAMPAIGN_NAME = :vCode AND a.CAMPAIGN_CURRENCY = :vCurrency)) THEN
    BEGIN
        INSERT INTO SEO_REPORT_CAMPAIGN (CAMPAIGN_CITY, CAMPAIGN_NAME, CAMPAIGN_VISITORS, CAMPAIGN_CURRENCY, CAMPAIGN_SALES)
        VALUES (:vCity, :vCode, :vVisits, :vCurrency, :vSales);
    END ELSE 
    BEGIN
        UPDATE SEO_REPORT_CAMPAIGN SET 
        CAMPAIGN_VISITORS = CAMPAIGN_VISITORS + :vVisits, 
        CAMPAIGN_SALES = CAMPAIGN_SALES + :vSales
        WHERE CAMPAIGN_CITY = :vCity AND CAMPAIGN_NAME = :vCode AND CAMPAIGN_CURRENCY = :vCurrency;
    END
  END

  UPDATE SEO_UPDATE_STATUS us
  SET us.PROCESS_STATUS = 100
  WHERE us.PROCESS_STATUS = 10;
  -- END CAMPAIGN DATA
END^
SET TERM ; ^


GRANT EXECUTE ON PROCEDURE SEO_UPDATE_TOTALS_STAGE_10 TO PUBLIC;

SET TERM ^ ;
ALTER PROCEDURE SEO_UPDATE_TOTALS_STAGE_9
AS
DECLARE VARIABLE vCount BIGINT;
BEGIN
    EXECUTE PROCEDURE WSP_PROCEDURE_RUNNING('SEO_UPDATE_TOTALS_STAGE_9') RETURNING_VALUES :vCount;
    
    IF (vCount > 0) THEN
        EXIT;

  -- FINAL STAGE - DELETE SEO_DATA WHEN IT IS 1 YEAR OLD AND PROCESS_STATUS IS 100
  DELETE 
  FROM SEO_DATA
  WHERE ID IN
  (
    SELECT seo.ID 
    FROM SEO_DATA seo
        JOIN SEO_UPDATE_STATUS us ON (us.SEO_DATA_ID = seo.ID)
    WHERE seo.CREATED <= CURRENT_TIMESTAMP - 365
        AND us.PROCESS_STATUS = 100
  );
END^
SET TERM ; ^


GRANT EXECUTE ON PROCEDURE SEO_UPDATE_TOTALS_STAGE_9 TO PUBLIC;

CREATE OR ALTER VIEW VW_SEO_CAMPAIGN_SUMMARY ( NAME, VISITS, SALES)
AS
SELECT LOWER(a.CAMPAIGN_NAME), SUM(a.CAMPAIGN_VISITORS), SUM(a.CAMPAIGN_SALES)
FROM SEO_REPORT_CAMPAIGN a
GROUP BY a.CAMPAIGN_NAME;

GRANT SELECT ON VW_SEO_CAMPAIGN_SUMMARY TO PUBLIC;


