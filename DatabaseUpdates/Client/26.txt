DELETE FROM SEO_REPORT_DAILY;

ALTER TABLE SEO_REPORT_DAILY
    ADD DAILY_ID BIGINT NOT NULL;
    
SET TERM ^ ;

CREATE TRIGGER TR_SEO_REPORT_DAILY_ID FOR SEO_REPORT_DAILY
ACTIVE BEFORE INSERT POSITION 0
AS 
BEGIN 
    NEW.DAILY_ID = GEN_ID(GEN_SEO_DATA_ID, 1);
END^

SET TERM ; ^ 

ALTER TABLE SEO_REPORT_DAILY DROP CONSTRAINT PK_SEO_REPOR_DAILY_IDX;

alter table SEO_REPORT_DAILY
add constraint PK_SEO_REPORT_DAILY_IDX
primary key (DAILY_ID);

CREATE UNIQUE INDEX UNQ_SEO_REPORT_DAILY1 ON SEO_REPORT_DAILY
  (DAILY_DATE);



DELETE FROM SEO_REPORT_HOURLY;

ALTER TABLE SEO_REPORT_HOURLY
    ADD HOURLY_ID BIGINT NOT NULL;
    
SET TERM ^ ;

CREATE TRIGGER TR_SEO_REPORT_HOURLY_ID FOR SEO_REPORT_HOURLY
ACTIVE BEFORE INSERT POSITION 0
AS 
BEGIN 
    NEW.HOURLY_ID = GEN_ID(GEN_SEO_DATA_ID, 1);
END^

SET TERM ; ^ 

ALTER TABLE SEO_REPORT_HOURLY DROP CONSTRAINT PK_SEO_REPOR_HOURLY_IDX;

alter table SEO_REPORT_HOURLY
add constraint PK_SEO_REPORT_HOURLY_IDX
primary key (HOURLY_ID);

CREATE UNIQUE INDEX UNQ_SEO_REPORT_HOURLY1 ON SEO_REPORT_HOURLY
  (HOURLY_DATE, HOURLY_HOUR, HOURLY_QUARTER);


DELETE FROM SEO_REPORT_LOCATION;

ALTER TABLE SEO_REPORT_LOCATION
    ADD LOCATION_ID BIGINT NOT NULL;
    
SET TERM ^ ;

CREATE TRIGGER TR_SEO_REPORT_LOCATION_ID FOR SEO_REPORT_LOCATION
ACTIVE BEFORE INSERT POSITION 0
AS 
BEGIN 
    NEW.LOCATION_ID = GEN_ID(GEN_SEO_DATA_ID, 1);
END^

SET TERM ; ^ 

ALTER TABLE SEO_REPORT_LOCATION DROP CONSTRAINT PK_SEO_REPORT_LOCATION_ID;

alter table SEO_REPORT_LOCATION
add constraint PK_SEO_REPORT_LOCATION_IDX
primary key (LOCATION_ID);

CREATE UNIQUE INDEX UNQ_SEO_REPORT_LOCATION_1 ON SEO_REPORT_LOCATION
  (LOCATION_CITY, LOCATION_YEAR, LOCATION_MONTH);




DELETE FROM SEO_REPORT_MONTHLY;

ALTER TABLE SEO_REPORT_MONTHLY
    ADD MONTHLY_ID BIGINT NOT NULL;
    
SET TERM ^ ;

CREATE TRIGGER TR_SEO_REPORT_MONTHLY_ID FOR SEO_REPORT_MONTHLY
ACTIVE BEFORE INSERT POSITION 0
AS 
BEGIN 
    NEW.MONTHLY_ID = GEN_ID(GEN_SEO_DATA_ID, 1);
END^

SET TERM ; ^ 

ALTER TABLE SEO_REPORT_MONTHLY DROP CONSTRAINT PK_SEO_REPOR_MONTHLY_IDX;

alter table SEO_REPORT_MONTHLY
add constraint PK_SEO_REPORT_MONTHLY_IDX
primary key (MONTHLY_ID);

CREATE UNIQUE INDEX UNQ_SEO_REPORT_MONTHLY_1 ON SEO_REPORT_MONTHLY
  (MONTHLY_YEAR, MONTHLY_MONTH);





DELETE FROM SEO_REPORT_PAGE_DATA;

ALTER TABLE SEO_REPORT_PAGE_DATA
    ADD PAGE_DATA_ID BIGINT NOT NULL;
    
SET TERM ^ ;

CREATE TRIGGER TR_SEO_REPORT_PAGE_DATA_ID FOR SEO_REPORT_PAGE_DATA
ACTIVE BEFORE INSERT POSITION 0
AS 
BEGIN 
    NEW.PAGE_DATA_ID = GEN_ID(GEN_SEO_DATA_ID, 1);
END^

SET TERM ; ^ 

ALTER TABLE SEO_REPORT_PAGE_DATA DROP CONSTRAINT PK_SEO_REPORT_PAGE_DATA_ID;

alter table SEO_REPORT_PAGE_DATA
add constraint PK_SEO_REPORT_PAGE_DATA_ID
primary key (PAGE_DATA_ID);

CREATE UNIQUE INDEX UNQ_SEO_REPORT_PAGE_DATA_1 ON SEO_REPORT_PAGE_DATA
  (PAGE_DATA_HASH, PAGE_DATA_YEAR, PAGE_DATA_MONTH);




DELETE FROM SEO_REPORT_SALES;

ALTER TABLE SEO_REPORT_SALES
    ADD SALES_ID BIGINT NOT NULL;
    
SET TERM ^ ;

CREATE TRIGGER TR_SEO_REPORT_SALES_ID FOR SEO_REPORT_SALES
ACTIVE BEFORE INSERT POSITION 0
AS 
BEGIN 
    NEW.SALES_ID = GEN_ID(GEN_SEO_DATA_ID, 1);
END^

SET TERM ; ^ 

ALTER TABLE SEO_REPORT_SALES DROP CONSTRAINT PK_SEO_REPORT_SALES_ID;

alter table SEO_REPORT_SALES
add constraint PK_SEO_REPORT_SALES_ID
primary key (SALES_ID);

CREATE UNIQUE INDEX UNQ_SEO_REPORT_SALES_1 ON SEO_REPORT_SALES
  (SALES_CITY, SALES_YEAR, SALES_MONTH, SALES_CURRENCY);







DELETE FROM SEO_REPORT_WEEKLY;

ALTER TABLE SEO_REPORT_WEEKLY
    ADD WEEKLY_ID BIGINT NOT NULL;
    
SET TERM ^ ;

CREATE TRIGGER TR_SEO_REPORT_WEEKLY_ID FOR SEO_REPORT_WEEKLY
ACTIVE BEFORE INSERT POSITION 0
AS 
BEGIN 
    NEW.WEEKLY_ID = GEN_ID(GEN_SEO_DATA_ID, 1);
END^

SET TERM ; ^ 

ALTER TABLE SEO_REPORT_WEEKLY DROP CONSTRAINT PK_SEO_REPOR_WEEKLY_IDX;

alter table SEO_REPORT_WEEKLY
add constraint PK_SEO_REPORT_WEEKLY_ID
primary key (WEEKLY_ID);

CREATE UNIQUE INDEX UNQ_SEO_REPORT_WEEKLY_1 ON SEO_REPORT_WEEKLY
  (WEEKLY_YEAR, WEEKLY_WEEK);




