SET TERM ^ ;

CREATE OR ALTER TRIGGER TR_WEBSITE_DISTRIBUTORS_AR_NULL FOR WEBSITE_DISTRIBUTORS
ACTIVE BEFORE INSERT POSITION 0
AS 
BEGIN 
	IF (NEW.AUTO_REDIRECT IS NULL) THEN
        NEW.AUTO_REDIRECT = 'N';
END^

SET TERM ; ^ 


SET TERM ^ ;
CREATE OR ALTER TRIGGER TR_COST_SIZE_SOFT_DELETE_CHECK FOR WS_PRODUCTS_COST_SIZE ACTIVE
BEFORE UPDATE POSITION 0
AS 
  DECLARE VARIABLE vCount BIGINT;
BEGIN 
    IF (NEW.IS_DELETED = 'Y' AND OLD.IS_DELETED = 'N') THEN
    BEGIN
        SELECT SUM(a.TOTAL_AVAILABLE)
        FROM HS_STOCKCONTROL a
        WHERE a.ITEM_ID = NEW.ID
        INTO :vCount;
        
        IF (vCount > 0) THEN
        BEGIN
            EXCEPTION EXC_PROD_ITEM_DELETE 'Can not delete as stock exists';
        END
        
        DELETE FROM HS_STOCK_CREATE_SETTINGS scs
	    WHERE (scs.PRODUCT_ID = NEW.ID) OR (scs.SUB_PRODUCT_ID = NEW.ID);

        NEW.SKU = 'DE' || GEN_ID(GEN_DELETED_SKU_ID, 1);
    END
END^
SET TERM ; ^
