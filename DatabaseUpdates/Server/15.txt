SET TERM ^ ;
CREATE OR ALTER PROCEDURE WSP_WEB_LOG_INS_4 (
    ipDATE TIMESTAMP,
    IPPLATFORM Varchar(255),
    IPBROWSERVERSION Varchar(255),
    IPISCRAWLER Varchar(255),
    IPREMOTEHOST Varchar(25),
    IPMETHOD Varchar(20),
    IPPATH Varchar(255),
    IPQUERY Varchar(500),
    IPREFERER Varchar(255),
    IPSESSION Varchar(200),
    IPCOUNTRY_CODE Varchar(10),
    IPWEBSITE_ID Integer )
AS
  DECLARE VARIABLE vID BIGINT;
BEGIN
  vID = GEN_ID(GEN_WS_WEB_LOG, 1);
  
  INSERT INTO WS_WEB_LOG(
    ID,
    LOG_DATE, 
    PLATFORM, 
    BROWSERVERSION, 
    ISCRAWLER, 
    REMOTEHOST, 
    METHOD, 
    PATH, 
    QUERY,
    REFERER,
    USER_SESSION,
    COUNTRY_CODE,
    WEBSITE_ID
  ) VALUES (
    :vID,
    :ipDate,
    :ipPLATFORM, 
    :ipBROWSERVERSION, 
    :ipISCRAWLER, 
    :ipREMOTEHOST, 
    :ipMETHOD, 
    :ipPATH, 
    :ipQUERY,
    :ipREFERER,
    :ipSESSION,
    :ipCOUNTRY_CODE,
    :IPWEBSITE_ID
  );
  SUSPEND;
END^
SET TERM ; ^


GRANT EXECUTE
 ON PROCEDURE WSP_WEB_LOG_INS_4 TO PUBLIC WITH GRANT OPTION;

SET TERM ^ ;
CREATE OR ALTER TRIGGER TR_UPDATE_DOMAIN FOR WS_LICENCES ACTIVE
BEFORE UPDATE POSITION 0
AS 
BEGIN 
	IF ((OLD.DOMAIN_NAME <> '') AND (NEW.DOMAIN_NAME IS DISTINCT FROM OLD.DOMAIN_NAME)) THEN
	BEGIN
        IF (OLD.UPDATES >= 2) THEN
            EXCEPTION EXC_LICENCE_UPDATES;
            
        NEW.UPDATES = OLD.UPDATES + 1;
	END
END^
SET TERM ; ^

SET TERM ^ ;
CREATE OR ALTER TRIGGER TR_LICENCES_ID FOR WS_LICENCES ACTIVE
BEFORE INSERT POSITION 0
AS 
BEGIN 
    if (NEW.ID is null) then
        NEW.ID = GEN_ID(GEN_LICENCES_ID, 1);
END^
SET TERM ; ^

SET TERM ^ ;
CREATE OR ALTER TRIGGER TR_LICENCES_INVOICE_CHECK FOR WS_LICENCES ACTIVE
BEFORE INSERT OR UPDATE POSITION 10
AS 
BEGIN 
    -- if null invoice and NOT a trial licence then error as licence has to have an invoice assigned
    IF ((NEW.TRIAL <> 'Y') AND (NEW.INVOICE_ID IS NULL)) THEN
    BEGIN
        EXCEPTION EXC_WS_INVALID_INVOICE;
    END
END^
SET TERM ; ^

SET TERM ^ ;
ALTER PROCEDURE SPSEO_INITIAL_REFERRER_INS (
    IPURL VARCHAR(1000) )
RETURNS (
    OPNEWID BIGINT )
AS
BEGIN
  IF (IPURL IS NULL) THEN
    IPURL = 'Unknown';
    
  IF (EXISTS(SELECT ID FROM SEO_INITIAL_REFERRER WHERE URL = :ipURL)) THEN
  BEGIN
    SELECT FIRST 1 ID
    FROM SEO_INITIAL_REFERRER
    WHERE URL = :ipURL
    INTO :opNEWID;  
  END ELSE
  BEGIN
    opNEWID = GEN_ID(GEN_SEO_DATA_ID, 1);

    INSERT INTO SEO_INITIAL_REFERRER (
      ID,
      URL
    ) VALUES (
      :opNEWID,
      :ipURL
    );
  END

  SUSPEND;
END^
SET TERM ; ^
