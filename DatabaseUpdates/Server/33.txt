

SET TERM ^ ;
ALTER PROCEDURE SEO_UPDATE_TOTALS_STAGE_6
AS
DECLARE VARIABLE vDate DATE;
  DECLARE VARIABLE vCount BIGINT;
  DECLARE VARIABLE vRefUnknown BIGINT;
  DECLARE VARIABLE vRefDirect BIGINT;
  DECLARE VARIABLE vRefOrganic BIGINT;
  DECLARE VARIABLE vRefReferal BIGINT;
  DECLARE VARIABLE vRefFaceBook BIGINT;
  DECLARE VARIABLE vRefTwitter BIGINT;
  DECLARE VARIABLE vRefGoogle BIGINT;
  DECLARE VARIABLE vRefYahoo BIGINT;
  DECLARE VARIABLE vRefBing BIGINT;
  DECLARE VARIABLE vTotalVisits BIGINT;
  DECLARE VARIABLE vHumans BIGINT;
  DECLARE VARIABLE vMobile BIGINT;
  DECLARE VARIABLE vBot BIGINT;
  DECLARE VARIABLE vBounce BIGINT;
  DECLARE VARIABLE vSales NUMERIC(18, 4);
  DECLARE VARIABLE vConvert BIGINT;
  DECLARE VARIABLE vMobileConv BIGINT;
  DECLARE VARIABLE vPageCount BIGINT;
BEGIN
    EXECUTE PROCEDURE WSP_PROCEDURE_RUNNING('SEO_UPDATE_TOTALS_STAGE_6') RETURNING_VALUES :vCount;
    
    IF (vCount > 0) THEN
        EXIT;

  -- START DAILY DATA
  FOR
    SELECT CAST(seo.CREATED AS DATE), 
    COUNT(seo.SESSION_ID),
    SUM(CASE seo.IS_BOT WHEN 'N' THEN 1 ELSE 0 END),
    SUM(CASE seo.IS_MOBILE_DEVICE WHEN 'N' THEN 0 ELSE 1 END), 
    SUM(CASE seo.IS_BOT WHEN 'N' THEN 0 ELSE 1 END),
    SUM(CASE seo.BOUNCED WHEN 'N' THEN 0 ELSE 1 END), 
    SUM(COALESCE(seo.SALE_AMOUNT, 0.00)), 
    SUM(CASE seo.SALE_AMOUNT WHEN 0 THEN 0 ELSE 1 END),
    SUM(CASE seo.IS_MOBILE_DEVICE WHEN 'N' THEN 0 ELSE CASE COALESCE(seo.SALE_AMOUNT, 0.00) WHEN 0 THEN 0 ELSE 1 END END), 
    SUM(CASE seo.REFERRAL_TYPE WHEN 0 THEN 1 ELSE 0 END),
    SUM(CASE seo.REFERRAL_TYPE WHEN 1 THEN 1 ELSE 0 END),
    SUM(CASE seo.REFERRAL_TYPE WHEN 2 THEN 1 ELSE 0 END),
    SUM(CASE seo.REFERRAL_TYPE WHEN 3 THEN 1 ELSE 0 END),
    SUM(CASE seo.REFERRAL_TYPE WHEN 4 THEN 1 ELSE 0 END),
    SUM(CASE seo.REFERRAL_TYPE WHEN 5 THEN 1 ELSE 0 END),
    SUM(CASE seo.REFERRAL_TYPE WHEN 6 THEN 1 ELSE 0 END),
    SUM(CASE seo.REFERRAL_TYPE WHEN 7 THEN 1 ELSE 0 END),
    SUM(CASE seo.REFERRAL_TYPE WHEN 8 THEN 1 ELSE 0 END)
    FROM SEO_DATA seo
        JOIN SEO_UPDATE_STATUS us ON (us.SEO_DATA_ID = seo.ID)
    WHERE us.PROCESS_STATUS = 7
    GROUP BY 1
    INTO :vDate, :vTotalVisits, :vHumans, :vMobile, :vBot, :vBounce, :vSales,
        :vConvert, :vMobileConv, :vRefUnknown, :vRefDirect, :vRefOrganic, vRefReferal, :vRefFaceBook, 
        :vRefTwitter, :vRefGoogle, :vRefYahoo, :vRefBing
  DO
  BEGIN
    SELECT COUNT(pv.ID) 
    FROM SEO_DATA_PAGE_VIEWS pv 
      JOIN SEO_UPDATE_STATUS us ON (us.SEO_DATA_ID = pv.SEO_DATA_ID)
    WHERE CAST(pv.VISITED AS DATE) = :vDate
      AND us.PROCESS_STATUS = 7
    INTO :vPageCount;

    IF (NOT EXISTS (SELECT d.DAILY_DATE FROM SEO_REPORT_DAILY d WHERE d.DAILY_DATE = :vDate)) THEN
    BEGIN
        INSERT INTO SEO_REPORT_DAILY (DAILY_DATE, DAILY_TOTALVISITS, DAILY_HUMANVISITS, DAILY_MOBILEVISITS, DAILY_BOTVISITS, DAILY_BOUNCED, DAILY_TOTALPAGES, DAILY_TOTAL_SALES, DAILY_CONVERSIONS, DAILY_MOBILECONVERSIONS, DAILY_REFERUNKNOWN, DAILY_REFERDIRECT, DAILY_REFERAL, DAILY_REFERORGANIC, DAILY_REFERBING, DAILY_REFERGOOGLE, DAILY_REFERYAHOO, DAILY_REFERFACEBOOK, DAILY_REFERTWITTER)
        VALUES (:vDate, :vTotalVisits, :vHumans, :vMobile, :vBot, :vBounce, :vPageCount, :vSales, :vConvert, :vMobileConv, :vRefUnknown, :vRefDirect, :vRefReferal, :vRefOrganic, :vRefBing, :vRefGoogle, :vRefYahoo, :vRefFaceBook, :vRefTwitter);
    END ELSE 
    BEGIN
        UPDATE SEO_REPORT_DAILY SET 
        DAILY_TOTALVISITS = DAILY_TOTALVISITS + :vTotalVisits, 
        DAILY_HUMANVISITS = DAILY_HUMANVISITS + :vHumans, 
        DAILY_MOBILEVISITS = DAILY_MOBILEVISITS + :vMobile, 
        DAILY_BOTVISITS = DAILY_BOTVISITS + :vBot, 
        DAILY_BOUNCED = DAILY_BOUNCED + :vBounce, 
        DAILY_TOTALPAGES = DAILY_TOTALPAGES + :vPageCount, 
        DAILY_TOTAL_SALES = DAILY_TOTAL_SALES + :vSales, 
        DAILY_CONVERSIONS = DAILY_CONVERSIONS + :vConvert, 
        DAILY_MOBILECONVERSIONS = DAILY_MOBILECONVERSIONS + :vMobileConv, 
        DAILY_REFERUNKNOWN = DAILY_REFERUNKNOWN + :vRefUnknown, 
        DAILY_REFERDIRECT = DAILY_REFERDIRECT + :vRefDirect, 
        DAILY_REFERAL = DAILY_REFERAL + :vRefReferal, 
        DAILY_REFERORGANIC = DAILY_REFERORGANIC + :vRefOrganic, 
        DAILY_REFERBING = DAILY_REFERBING + :vRefBing, 
        DAILY_REFERGOOGLE = DAILY_REFERGOOGLE + :vRefGoogle, 
        DAILY_REFERYAHOO = DAILY_REFERYAHOO + :vRefYahoo, 
        DAILY_REFERFACEBOOK = DAILY_REFERFACEBOOK + :vRefFaceBook, 
        DAILY_REFERTWITTER = DAILY_REFERTWITTER + :vRefTwitter
        WHERE DAILY_DATE = :vDate;
    END
  END

  UPDATE SEO_UPDATE_STATUS us
  SET us.PROCESS_STATUS = 8
  WHERE us.PROCESS_STATUS = 7;
  -- END DAILY DATA
END^
SET TERM ; ^


GRANT EXECUTE
 ON PROCEDURE SEO_UPDATE_TOTALS_STAGE_6 TO PUBLIC;


SET TERM ^ ;
ALTER PROCEDURE SEO_UPDATE_TOTALS_STAGE_7
AS
DECLARE VARIABLE vCount BIGINT;
  DECLARE VARIABLE vYear INTEGER;
  DECLARE VARIABLE vMonth INTEGER;
  DECLARE VARIABLE vTotalVisits BIGINT;
  DECLARE VARIABLE vHumans BIGINT;
  DECLARE VARIABLE vMobile BIGINT;
  DECLARE VARIABLE vBot BIGINT;
  DECLARE VARIABLE vBounce BIGINT;
  DECLARE VARIABLE vSales NUMERIC(18, 4);
  DECLARE VARIABLE vConvert BIGINT;
  DECLARE VARIABLE vMobileConv BIGINT;
  DECLARE VARIABLE vRefUnknown BIGINT;
  DECLARE VARIABLE vRefDirect BIGINT;
  DECLARE VARIABLE vRefOrganic BIGINT;
  DECLARE VARIABLE vRefReferal BIGINT;
  DECLARE VARIABLE vRefFaceBook BIGINT;
  DECLARE VARIABLE vRefTwitter BIGINT;
  DECLARE VARIABLE vRefGoogle BIGINT;
  DECLARE VARIABLE vRefYahoo BIGINT;
  DECLARE VARIABLE vRefBing BIGINT;
  DECLARE VARIABLE vPageCount BIGINT;
BEGIN
    EXECUTE PROCEDURE WSP_PROCEDURE_RUNNING('SEO_UPDATE_TOTALS_STAGE_7') RETURNING_VALUES :vCount;
    
    IF (vCount > 0) THEN
        EXIT;

  -- START MONTHLY DATA
  FOR
    SELECT EXTRACT(YEAR FROM seo.CREATED), 
    EXTRACT(MONTH FROM seo.CREATED),
    COUNT(seo.SESSION_ID),
    SUM(CASE seo.IS_BOT WHEN 'N' THEN 1 ELSE 0 END),
    SUM(CASE seo.IS_MOBILE_DEVICE WHEN 'N' THEN 0 ELSE 1 END), 
    SUM(CASE seo.IS_BOT WHEN 'N' THEN 0 ELSE 1 END),
    SUM(CASE seo.BOUNCED WHEN 'N' THEN 0 ELSE 1 END), 
    SUM(COALESCE(seo.SALE_AMOUNT, 0.00)), 
    SUM(CASE seo.SALE_AMOUNT WHEN 0 THEN 0 ELSE 1 END),
    SUM(CASE seo.IS_MOBILE_DEVICE WHEN 'N' THEN 0 ELSE CASE COALESCE(seo.SALE_AMOUNT, 0.00) WHEN 0 THEN 0 ELSE 1 END END), 
    SUM(CASE seo.REFERRAL_TYPE WHEN 0 THEN 1 ELSE 0 END),
    SUM(CASE seo.REFERRAL_TYPE WHEN 1 THEN 1 ELSE 0 END),
    SUM(CASE seo.REFERRAL_TYPE WHEN 2 THEN 1 ELSE 0 END),
    SUM(CASE seo.REFERRAL_TYPE WHEN 3 THEN 1 ELSE 0 END),
    SUM(CASE seo.REFERRAL_TYPE WHEN 4 THEN 1 ELSE 0 END),
    SUM(CASE seo.REFERRAL_TYPE WHEN 5 THEN 1 ELSE 0 END),
    SUM(CASE seo.REFERRAL_TYPE WHEN 6 THEN 1 ELSE 0 END),
    SUM(CASE seo.REFERRAL_TYPE WHEN 7 THEN 1 ELSE 0 END),
    SUM(CASE seo.REFERRAL_TYPE WHEN 8 THEN 1 ELSE 0 END)
    FROM SEO_DATA seo
        JOIN SEO_UPDATE_STATUS us ON (us.SEO_DATA_ID = seo.ID)
    WHERE us.PROCESS_STATUS = 8 
    GROUP BY 1, 2
    INTO :vYear, :vMonth, :vTotalVisits, :vHumans, :vMobile, :vBot, :vBounce, :vSales,
        :vConvert, :vMobileConv, :vRefUnknown, :vRefDirect, :vRefOrganic, vRefReferal, :vRefFaceBook, 
        :vRefTwitter, :vRefGoogle, :vRefYahoo, :vRefBing
  DO
  BEGIN
    SELECT COUNT(pv.ID) 
    FROM SEO_DATA_PAGE_VIEWS pv 
        JOIN SEO_UPDATE_STATUS us ON (us.SEO_DATA_ID = pv.SEO_DATA_ID)
    WHERE EXTRACT(YEAR FROM pv.VISITED) = :vYear AND EXTRACT(MONTH FROM pv.VISITED) = :vMonth
      AND us.PROCESS_STATUS = 8
    INTO :vPageCount;

    IF (NOT EXISTS (SELECT w.MONTHLY_YEAR FROM SEO_REPORT_MONTHLY w WHERE w.MONTHLY_YEAR = :vYear AND w.MONTHLY_MONTH = :vMonth)) THEN
    BEGIN
        INSERT INTO SEO_REPORT_MONTHLY (MONTHLY_YEAR, MONTHLY_MONTH, MONTHLY_TOTALVISITS, MONTHLY_HUMANVISITS, MONTHLY_MOBILEVISITS, MONTHLY_BOTVISITS, MONTHLY_BOUNCED, MONTHLY_TOTALPAGES, MONTHLY_TOTAL_SALES, MONTHLY_CONVERSIONS, MONTHLY_MOBILECONVERSIONS, MONTHLY_REFERUNKNOWN, MONTHLY_REFERDIRECT, MONTHLY_REFERAL, MONTHLY_REFERORGANIC, MONTHLY_REFERBING, MONTHLY_REFERGOOGLE, MONTHLY_REFERYAHOO, MONTHLY_REFERFACEBOOK, MONTHLY_REFERTWITTER)
        VALUES (:vYear, :vMonth, :vTotalVisits, :vHumans, :vMobile, :vBot, :vBounce, :vPageCount, :vSales, :vConvert, :vMobileConv, :vRefUnknown, :vRefDirect, :vRefReferal, :vRefOrganic, :vRefBing, :vRefGoogle, :vRefYahoo, :vRefFaceBook, :vRefTwitter);
    END ELSE 
    BEGIN
        UPDATE SEO_REPORT_MONTHLY SET 
        MONTHLY_TOTALVISITS = MONTHLY_TOTALVISITS + :vTotalVisits, 
        MONTHLY_HUMANVISITS = MONTHLY_HUMANVISITS + :vHumans, 
        MONTHLY_MOBILEVISITS = MONTHLY_MOBILEVISITS + :vMobile, 
        MONTHLY_BOTVISITS = MONTHLY_BOTVISITS + :vBot, 
        MONTHLY_BOUNCED = MONTHLY_BOUNCED + :vBounce, 
        MONTHLY_TOTALPAGES = MONTHLY_TOTALPAGES + :vPageCount, 
        MONTHLY_TOTAL_SALES = MONTHLY_TOTAL_SALES + :vSales, 
        MONTHLY_CONVERSIONS = MONTHLY_CONVERSIONS + :vConvert, 
        MONTHLY_MOBILECONVERSIONS = MONTHLY_MOBILECONVERSIONS + :vMobileConv, 
        MONTHLY_REFERUNKNOWN = MONTHLY_REFERUNKNOWN + :vRefUnknown, 
        MONTHLY_REFERDIRECT = MONTHLY_REFERDIRECT + :vRefDirect, 
        MONTHLY_REFERAL = MONTHLY_REFERAL + :vRefReferal, 
        MONTHLY_REFERORGANIC = MONTHLY_REFERORGANIC + :vRefOrganic, 
        MONTHLY_REFERBING = MONTHLY_REFERBING + :vRefBing, 
        MONTHLY_REFERGOOGLE = MONTHLY_REFERGOOGLE + :vRefGoogle, 
        MONTHLY_REFERYAHOO = MONTHLY_REFERYAHOO + :vRefYahoo, 
        MONTHLY_REFERFACEBOOK = MONTHLY_REFERFACEBOOK + :vRefFaceBook, 
        MONTHLY_REFERTWITTER = MONTHLY_REFERTWITTER + :vRefTwitter
        WHERE MONTHLY_YEAR = :vYear AND MONTHLY_MONTH = :vMonth;
    END
  END

  UPDATE SEO_UPDATE_STATUS us
  SET us.PROCESS_STATUS = 9
  WHERE us.PROCESS_STATUS = 8;
  -- END MONTHLY DATA
END^
SET TERM ; ^


GRANT EXECUTE
 ON PROCEDURE SEO_UPDATE_TOTALS_STAGE_7 TO PUBLIC;



SET TERM ^ ;
ALTER PROCEDURE SEO_UPDATE_TOTALS_STAGE_8
AS
DECLARE VARIABLE vCount BIGINT;
  DECLARE VARIABLE vYear INTEGER;
  DECLARE VARIABLE vWeek INTEGER;
  DECLARE VARIABLE vTotalVisits BIGINT;
  DECLARE VARIABLE vHumans BIGINT;
  DECLARE VARIABLE vMobile BIGINT;
  DECLARE VARIABLE vBot BIGINT;
  DECLARE VARIABLE vBounce BIGINT;
  DECLARE VARIABLE vSales NUMERIC(18, 4);
  DECLARE VARIABLE vConvert BIGINT;
  DECLARE VARIABLE vMobileConv BIGINT;
  DECLARE VARIABLE vRefUnknown BIGINT;
  DECLARE VARIABLE vRefDirect BIGINT;
  DECLARE VARIABLE vRefOrganic BIGINT;
  DECLARE VARIABLE vRefReferal BIGINT;
  DECLARE VARIABLE vRefFaceBook BIGINT;
  DECLARE VARIABLE vRefTwitter BIGINT;
  DECLARE VARIABLE vRefGoogle BIGINT;
  DECLARE VARIABLE vRefYahoo BIGINT;
  DECLARE VARIABLE vRefBing BIGINT;
  DECLARE VARIABLE vPageCount BIGINT;
BEGIN
    EXECUTE PROCEDURE WSP_PROCEDURE_RUNNING('SEO_UPDATE_TOTALS_STAGE_8') RETURNING_VALUES :vCount;
    
    IF (vCount > 0) THEN
        EXIT;

  -- START WEEKLY DATA
  FOR
    SELECT EXTRACT(YEAR FROM seo.CREATED), 
    EXTRACT(WEEK FROM seo.CREATED),
    COUNT(seo.SESSION_ID),
    SUM(CASE seo.IS_BOT WHEN 'N' THEN 1 ELSE 0 END),
    SUM(CASE seo.IS_MOBILE_DEVICE WHEN 'N' THEN 0 ELSE 1 END), 
    SUM(CASE seo.IS_BOT WHEN 'N' THEN 0 ELSE 1 END),
    SUM(CASE seo.BOUNCED WHEN 'N' THEN 0 ELSE 1 END), 
    SUM(COALESCE(seo.SALE_AMOUNT, 0.00)), 
    SUM(CASE seo.SALE_AMOUNT WHEN 0 THEN 0 ELSE 1 END),
    SUM(CASE seo.IS_MOBILE_DEVICE WHEN 'N' THEN 0 ELSE CASE COALESCE(seo.SALE_AMOUNT, 0.00) WHEN 0 THEN 0 ELSE 1 END END), 
    SUM(CASE seo.REFERRAL_TYPE WHEN 0 THEN 1 ELSE 0 END),
    SUM(CASE seo.REFERRAL_TYPE WHEN 1 THEN 1 ELSE 0 END),
    SUM(CASE seo.REFERRAL_TYPE WHEN 2 THEN 1 ELSE 0 END),
    SUM(CASE seo.REFERRAL_TYPE WHEN 3 THEN 1 ELSE 0 END),
    SUM(CASE seo.REFERRAL_TYPE WHEN 4 THEN 1 ELSE 0 END),
    SUM(CASE seo.REFERRAL_TYPE WHEN 5 THEN 1 ELSE 0 END),
    SUM(CASE seo.REFERRAL_TYPE WHEN 6 THEN 1 ELSE 0 END),
    SUM(CASE seo.REFERRAL_TYPE WHEN 7 THEN 1 ELSE 0 END),
    SUM(CASE seo.REFERRAL_TYPE WHEN 8 THEN 1 ELSE 0 END)
    FROM SEO_DATA seo
        JOIN SEO_UPDATE_STATUS us ON (us.SEO_DATA_ID = seo.ID)
    WHERE us.PROCESS_STATUS = 9
    GROUP BY 1, 2
    INTO :vYear, :vWeek, :vTotalVisits, :vHumans, :vMobile, :vBot, :vBounce, :vSales,
        :vConvert, :vMobileConv, :vRefUnknown, :vRefDirect, :vRefOrganic, vRefReferal, :vRefFaceBook, 
        :vRefTwitter, :vRefGoogle, :vRefYahoo, :vRefBing
  DO
  BEGIN
    SELECT COUNT(pv.ID) 
    FROM SEO_DATA_PAGE_VIEWS pv 
      JOIN SEO_UPDATE_STATUS us ON (us.SEO_DATA_ID = pv.SEO_DATA_ID)
    WHERE EXTRACT(YEAR FROM pv.VISITED) = :vYear AND EXTRACT(WEEK FROM pv.VISITED) = :vWeek
      AND us.PROCESS_STATUS = 9
    INTO :vPageCount;

    IF (NOT EXISTS (SELECT w.WEEKLY_YEAR FROM SEO_REPORT_WEEKLY w WHERE w.WEEKLY_YEAR = :vYear AND w.WEEKLY_WEEK = :vWeek)) THEN
    BEGIN
        INSERT INTO SEO_REPORT_WEEKLY (WEEKLY_YEAR, WEEKLY_WEEK, WEEKLY_TOTALVISITS, WEEKLY_HUMANVISITS, WEEKLY_MOBILEVISITS, WEEKLY_BOTVISITS, WEEKLY_BOUNCED, WEEKLY_TOTALPAGES, WEEKLY_TOTAL_SALES, WEEKLY_CONVERSIONS, WEEKLY_MOBILECONVERSIONS, WEEKLY_REFERUNKNOWN, WEEKLY_REFERDIRECT, WEEKLY_REFERAL, WEEKLY_REFERORGANIC, WEEKLY_REFERBING, WEEKLY_REFERGOOGLE, WEEKLY_REFERYAHOO, WEEKLY_REFERFACEBOOK, WEEKLY_REFERTWITTER)
        VALUES (:vYear, :vWeek, :vTotalVisits, :vHumans, :vMobile, :vBot, :vBounce, :vPageCount, :vSales, :vConvert, :vMobileConv, :vRefUnknown, :vRefDirect, :vRefReferal, :vRefOrganic, :vRefBing, :vRefGoogle, :vRefYahoo, :vRefFaceBook, :vRefTwitter);
    END ELSE 
    BEGIN
        UPDATE SEO_REPORT_WEEKLY SET 
        WEEKLY_TOTALVISITS = WEEKLY_TOTALVISITS + :vTotalVisits, 
        WEEKLY_HUMANVISITS = WEEKLY_HUMANVISITS + :vHumans, 
        WEEKLY_MOBILEVISITS = WEEKLY_MOBILEVISITS + :vMobile, 
        WEEKLY_BOTVISITS = WEEKLY_BOTVISITS + :vBot, 
        WEEKLY_BOUNCED = WEEKLY_BOUNCED + :vBounce, 
        WEEKLY_TOTALPAGES = WEEKLY_TOTALPAGES + :vPageCount, 
        WEEKLY_TOTAL_SALES = WEEKLY_TOTAL_SALES + :vSales, 
        WEEKLY_CONVERSIONS = WEEKLY_CONVERSIONS + :vConvert, 
        WEEKLY_MOBILECONVERSIONS = WEEKLY_MOBILECONVERSIONS + :vMobileConv, 
        WEEKLY_REFERUNKNOWN = WEEKLY_REFERUNKNOWN + :vRefUnknown, 
        WEEKLY_REFERDIRECT = WEEKLY_REFERDIRECT + :vRefDirect, 
        WEEKLY_REFERAL = WEEKLY_REFERAL + :vRefReferal, 
        WEEKLY_REFERORGANIC = WEEKLY_REFERORGANIC + :vRefOrganic, 
        WEEKLY_REFERBING = WEEKLY_REFERBING + :vRefBing, 
        WEEKLY_REFERGOOGLE = WEEKLY_REFERGOOGLE + :vRefGoogle, 
        WEEKLY_REFERYAHOO = WEEKLY_REFERYAHOO + :vRefYahoo, 
        WEEKLY_REFERFACEBOOK = WEEKLY_REFERFACEBOOK + :vRefFaceBook, 
        WEEKLY_REFERTWITTER = WEEKLY_REFERTWITTER + :vRefTwitter
        WHERE WEEKLY_YEAR = :vYear AND WEEKLY_WEEK = :vWeek;
    END
  END

  UPDATE SEO_UPDATE_STATUS us
  SET us.PROCESS_STATUS = 4
  WHERE us.PROCESS_STATUS = 9;
  -- END WEEKLY DATA
END^
SET TERM ; ^


GRANT EXECUTE
 ON PROCEDURE SEO_UPDATE_TOTALS_STAGE_8 TO  "PUBLIC";



SET TERM ^ ;
ALTER PROCEDURE SEO_UPDATE_TOTALS_STAGE_3
AS
DECLARE VARIABLE vYear INTEGER;
  DECLARE VARIABLE vMonth INTEGER;
  DECLARE VARIABLE vHumans BIGINT;
  DECLARE VARIABLE vBot BIGINT;
  DECLARE VARIABLE vCount BIGINT;
  DECLARE VARIABLE vPageData VARCHAR(1000);
BEGIN
    EXECUTE PROCEDURE WSP_PROCEDURE_RUNNING('SEO_UPDATE_TOTALS_STAGE_3') RETURNING_VALUES :vCount;
    
    IF (vCount > 0) THEN
        EXIT;
        
    UPDATE SEO_UPDATE_STATUS
    SET PROCESS_STATUS = 12
    WHERE SEO_DATA_ID IN
    (
        SELECT a.SEO_DATA_ID
        FROM SEO_UPDATE_STATUS a
          JOIN SEO_DATA seo ON (seo.ID = a.SEO_DATA_ID)
        WHERE seo.CREATED < CURRENT_TIMESTAMP - .25
          AND a.PROCESS_STATUS = 4
    );

      
  -- PAGE VIEW DATA
  FOR
    SELECT EXTRACT(YEAR FROM seo.created),
        EXTRACT(month from seo.CREATED),
        SUM(CASE seo.IS_BOT WHEN 'N' THEN 1 ELSE 0 END),
        SUM(CASE seo.IS_BOT WHEN 'Y' THEN 1 ELSE 0 END),
        LOWER(SUBSTRING(pv.URL FROM POSITION('/', pv.URL, 10)))
    FROM SEO_DATA_PAGE_VIEWS pv
      JOIN SEO_DATA seo ON (seo.ID = pv.SEO_DATA_ID)
      JOIN SEO_UPDATE_STATUS us ON (us.SEO_DATA_ID = seo.ID)
    WHERE seo.CREATED <= (CURRENT_TIMESTAMP - ((1.0000 / 1440) * 120)) AND
        us.PROCESS_STATUS = 12 AND
        (LOWER(pv.URL) NOT LIKE '%/controls/%' 
            AND LOWER(pv.URL) NOT LIKE '%/error/%'
            AND LOWER(pv.URL) NOT LIKE '%/licencevalidate%')
    GROUP BY 1, 2, 5
    ORDER BY 2 DESC, 3 DESC
    INTO :vYear, :vMonth, :vHumans, :vBot, :vPageData
  DO
  BEGIN
    IF (NOT EXISTS(SELECT PAGE_DATA_HASH FROM SEO_REPORT_PAGE_DATA WHERE PAGE_DATA_HASH = HASH(:vPageData) AND PAGE_DATA_YEAR = :vYear AND PAGE_DATA_MONTH = :vMonth)) THEN
    BEGIN
        INSERT INTO SEO_REPORT_PAGE_DATA (PAGE_DATA_HASH, PAGE_DATA_URL, PAGE_DATA_YEAR, PAGE_DATA_MONTH, PAGE_DATA_HUMAN_COUNT, PAGE_DATA_BOT_COUNT)
         VALUES (HASH(:vPageData), :vPageData, :vYear, :vMonth, :vHumans, :vBot);
    END ELSE
    BEGIN
        UPDATE SEO_REPORT_PAGE_DATA
        SET PAGE_DATA_HUMAN_COUNT = PAGE_DATA_HUMAN_COUNT + :vHumans,
            PAGE_DATA_BOT_COUNT = PAGE_DATA_BOT_COUNT + :vBOT
        WHERE PAGE_DATA_HASH = HASH(:vPageData) AND PAGE_DATA_YEAR = :vYear AND PAGE_DATA_MONTH = :vMonth;
    END
  END

  UPDATE SEO_UPDATE_STATUS us
  SET us.PROCESS_STATUS = 10
  WHERE us.PROCESS_STATUS = 12;
  -- END PAGE VIEW DATA
END^
SET TERM ; ^


GRANT EXECUTE
 ON PROCEDURE SEO_UPDATE_TOTALS_STAGE_3 TO PUBLIC;

