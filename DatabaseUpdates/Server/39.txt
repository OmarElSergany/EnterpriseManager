SET TERM ^ ;
ALTER PROCEDURE SP_CLIENT_ACTION_CREATE (
    IPACTION_TYPE Integer,
    IPCLIENT_ID Bigint )
RETURNS (
    IPUSER_ID Bigint,
    IPUSER_NAME Varchar(100) )
AS
BEGIN
    -- if a member of staff is looking after the client
    IF (EXISTS(SELECT a.STAFF_ID FROM CLIENT_TO_STAFF a WHERE a.CLIENT_ID = :ipCLIENT_ID)) THEN
    BEGIN
        SELECT FIRST 1 a.STAFF_ID 
        FROM CLIENT_TO_STAFF a 
        WHERE a.CLIENT_ID = :ipCLIENT_ID
        ORDER BY a.ID DESC
        INTO :ipUSER_ID;
    END ELSE 
    BEGIN
        SELECT a.NAME_VALUE
        FROM WS_DATA a
        WHERE a.NAME = 'CLIENT_ACTION_' || :ipACTION_TYPE
        INTO :ipUSER_ID;
    END
    
    IF (ipUSER_ID IS NOT NULL) THEN
    BEGIN
        SELECT m.USERNAME
        FROM WS_MEMBERS m
        WHERE m.ID = :ipUSER_ID
        INTO :ipUSER_NAME;
    END
    
    SUSPEND;
END^
SET TERM ; ^


SET TERM ^ ;

CREATE TRIGGER TR_REMOVE_PREVIOUS_MANAGER FOR CLIENT_TO_STAFF
ACTIVE AFTER INSERT POSITION 30000
AS 
BEGIN 
	DELETE 
	FROM CLIENT_TO_STAFF cts
	WHERE cts.CLIENT_ID = NEW.CLIENT_ID
	  AND cts.STAFF_ID <> NEW.STAFF_ID;
END^

SET TERM ; ^ 


CREATE TABLE WS_COUPON_EXCLUDED_PRODUCTS
(
  ID Bigint NOT NULL,
  COUPON_ID Integer NOT NULL,
  PRODUCT_COST_SIZE_ID Bigint NOT NULL,
  REPLICATE$HASH Bigint,
  CONSTRAINT PK_COUPON_EXCLUDED_PRODUCTS_ID PRIMARY KEY (ID)
);

ALTER TABLE WS_COUPON_EXCLUDED_PRODUCTS ADD CONSTRAINT FK_COUPON_EXCLUDED_COUPON_ID
  FOREIGN KEY (COUPON_ID) REFERENCES WS_COUPONS (ID) ON UPDATE CASCADE ON DELETE CASCADE;
  
ALTER TABLE WS_COUPON_EXCLUDED_PRODUCTS ADD CONSTRAINT FK_COUPON_EXCLUDED_PRODUCTS_ID
  FOREIGN KEY (PRODUCT_COST_SIZE_ID) REFERENCES WS_PRODUCTS_COST_SIZE (ID) ON UPDATE CASCADE ON DELETE CASCADE;
  
CREATE UNIQUE INDEX IDX_WS_COUPON_EXC_PROD ON WS_COUPON_EXCLUDED_PRODUCTS (COUPON_ID,PRODUCT_COST_SIZE_ID);



GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON WS_COUPON_EXCLUDED_PRODUCTS TO PUBLIC;


CREATE GENERATOR GEN_COUP_EXCLUDED_ID;

GRANT USAGE ON GENERATOR GEN_COUP_EXCLUDED_ID TO USER PUBLIC;


SET TERM ^ ;

EXECUTE BLOCK
AS
  DECLARE VARIABLE vNewID BIGINT;
  DECLARE VARIABLE vSiteID INTEGER;
BEGIN
  SELECT SITE_ID
  FROM REPLICATE$OPTIONS
  INTO :vSiteID;
  
  vNewID = vSiteID * 100000000;
  EXECUTE STATEMENT 'SET GENERATOR GEN_COUP_EXCLUDED_ID TO ' || :vNewID || ';';

END ^

SET TERM ; ^

SET TERM ^ ;

CREATE OR ALTER TRIGGER TR_COUPON_EXCLUDED_PRODUCTS_ID FOR WS_COUPON_EXCLUDED_PRODUCTS
ACTIVE BEFORE INSERT POSITION 0
AS 
BEGIN 
	IF (NEW.ID IS NULL) THEN
        NEW.ID = GEN_ID(GEN_COUP_EXCLUDED_ID, 1);
END^

SET TERM ; ^ 
